{"version":3,"sources":["banner.jpg","useHooks/useAvatarHide.ts","components/AppHeader/index.tsx","useHooks/useScroll.ts","components/PageBackGround/index.tsx","components/MarckonAvatar/index.tsx","components/PersonalCard/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","AvatarReducerAction","avatarReducer","state","action","Hide","isHide","Show","useAvatarHide","useReducer","dispatch","useStyles","makeStyles","theme","createStyles","mainTransParent","position","top","backgroundColor","color","boxShadow","btnGroup","display","flexGrow","justifyContent","AppHeader","classes","isAvatarHide","console","log","AppBar","className","Toolbar","Typography","variant","IconButton","style","useScroll","element","useState","windowTop","windowLeft","setPosition","scrollCb","e","window","scrollY","scrollX","elementTop","getBoundingClientRect","undefined","elementLeft","left","useEffect","document","addEventListener","removeEventListener","pageBackGround","bottom","right","zIndex","bgImage","height","overflow","PageBackGround","positions","transform","src","bannerUrl","alt","width","avatar","borderRadius","MarckonAvatar","props","avatarDOM","useRef","current","ref","personalCard","margin","PersonalCard","App","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3f6fe89c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/banner.0ec55d2a.jpg\";","import React, { useReducer } from 'react';\n\ninterface UseAvatarHideState {\n  isHide: boolean;\n}\n\nexport enum AvatarReducerAction {\n  'Hide',\n  'Show',\n}\n\nexport function avatarReducer(state: UseAvatarHideState, action: AvatarReducerAction) {\n  switch (action) {\n    case AvatarReducerAction.Hide:\n      return { isHide: true };\n    case AvatarReducerAction.Show:\n      return { isHide: false };\n  }\n}\n\nexport function useAvatarHide(): { isHide: boolean; dispatch: (action: AvatarReducerAction) => void } {\n  const [state, dispatch] = useReducer(avatarReducer, {\n    isHide: false,\n  });\n\n  return { isHide: state.isHide, dispatch };\n}\n","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport EmailIcon from '@material-ui/icons/Email';\nimport { useAvatarHide } from '../../useHooks/useAvatarHide';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    mainTransParent: {\n      position: 'fixed',\n      top: 0,\n      backgroundColor: 'rgba(0,0,0,0.65)',\n      color: '#fff',\n      boxShadow: 'none',\n    },\n    btnGroup: {\n      display: 'flex',\n      flexGrow: 1,\n      justifyContent: 'flex-end',\n    },\n  })\n);\n\nexport const AppHeader: React.FC = () => {\n  const classes = useStyles();\n  const isAvatarHide = useAvatarHide();\n  console.log(isAvatarHide)\n\n  return (\n    <AppBar position=\"static\" className={classes.mainTransParent}>\n      <Toolbar>\n        <Typography variant=\"h6\">Marckon</Typography>\n        <div className={classes.btnGroup}>\n          <IconButton>\n            <GitHubIcon style={{ color: '#fff' }} />\n          </IconButton>\n          <IconButton>\n            <EmailIcon style={{ color: '#fff' }} />\n          </IconButton>\n        </div>\n      </Toolbar>\n    </AppBar>\n  );\n};\n","import React, { useEffect, useState } from 'react';\n\ninterface UseScrollState {\n  /* 窗口scroll bar的位置 */\n  windowTop: number;\n  windowLeft: number;\n  /* 传入的element scroll 位置 */\n  elementTop?: number;\n  elementLeft?: number;\n}\n\n/* 获取scroll的位置 */\nexport function useScroll(element?: HTMLElement): UseScrollState {\n  const [position, setPosition] = useState<UseScrollState>({\n    windowTop: 0,\n    windowLeft: 0,\n  });\n\n  function scrollCb(e: Event) {\n    setPosition({\n      windowTop: window.scrollY,\n      windowLeft: window.scrollX,\n      elementTop: element ? element.getBoundingClientRect().top : undefined,\n      elementLeft: element ? element.getBoundingClientRect().left : undefined,\n    });\n  }\n\n  useEffect(() => {\n    document.addEventListener('scroll', scrollCb);\n\n    return () => {\n      document.removeEventListener('scroll', scrollCb);\n    };\n  }, [element]);\n\n  return position;\n}\n","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport bannerUrl from '../../banner.jpg';\nimport { useScroll } from '../../useHooks/useScroll';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    pageBackGround: {\n      position: 'fixed',\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      zIndex: -1,\n    },\n    bgImage: {\n      height: '45vh',\n      overflow: 'hidden',\n    },\n  })\n);\n\nexport const PageBackGround = () => {\n  const classes = useStyles();\n  const positions = useScroll();\n\n  return (\n    <div className={classes.pageBackGround}>\n      <div className={classes.bgImage} style={{ transform: `translate3d(0px, ${-positions.windowTop * 0.5}px, 0px)` }}>\n        <img src={bannerUrl} alt=\"\" width=\"100%\" />\n      </div>\n    </div>\n  );\n};\n","import React, { useRef } from 'react';\nimport { useScroll } from '../../useHooks/useScroll';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { useAvatarHide, AvatarReducerAction } from '../../useHooks/useAvatarHide';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    avatar: {\n      width: '10vw',\n      height: '10vw',\n      boxShadow: '0 0 0 5px rgba(0,0,0,0.65)',\n      borderRadius: '10vw',\n      backgroundColor: '#fff',\n    },\n  })\n);\n\ninterface MarckonAvatarProps {\n  className: string;\n}\n\nexport const MarckonAvatar = (props: MarckonAvatarProps) => {\n  const avatarDOM = useRef(null);\n  const position = useScroll(avatarDOM.current || undefined);\n  const classes = useStyles();\n  const { isHide, dispatch } = useAvatarHide();\n\n  /* 滚动到64px（header高度）设置隐藏 */\n  if (position.elementTop && position.elementTop <= 64 && !isHide) {\n    dispatch(AvatarReducerAction.Hide);\n  }\n\n  if (position.elementTop && position.elementTop > 64 && isHide) {\n    dispatch(AvatarReducerAction.Show);\n  }\n  return <div className={`${classes.avatar} ${props.className}`} ref={avatarDOM}></div>;\n};\n","import React from 'react';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport { MarckonAvatar } from '../MarckonAvatar';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    personalCard: {\n      width: '90vw',\n      height: '100vh',\n      margin: '35vh 5vw 0 5vw',\n      backgroundColor: '#fff',\n      borderRadius: '6px',\n      position: 'relative',\n      boxShadow:\n        '0 16px 24px 2px rgba(0, 0, 0, 0.14), 0 6px 30px 5px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(0, 0, 0, 0.2);',\n    },\n    avatar: {\n      position: 'absolute',\n      left: '50%',\n      top: 0,\n      transform: 'translate(-50%, -50%)',\n    },\n  })\n);\n\nexport const PersonalCard = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.personalCard}>\n      <MarckonAvatar className={classes.avatar} />\n    </div>\n  );\n};\n","import React from 'react';\nimport logo from './logo.svg';\nimport { AppHeader } from './components/AppHeader';\nimport { PageBackGround } from './components/PageBackGround';\nimport { PersonalCard } from './components/PersonalCard';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <PageBackGround />\n      <AppHeader />\n      <PersonalCard />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}